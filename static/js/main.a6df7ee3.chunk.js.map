{"version":3,"sources":["components/Wrapper/index.js","components/CharacterCard/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","CharacterCard","onClick","clickedImg","id","alt","name","src","image","Title","Score","title","score","highScore","shuffle","array","i","length","j","Math","floor","random","App","state","characters","indexOf","push","console","log","handleIncrement","makeShuffle","setState","newScore","this","map","character","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"88CAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,MCS1BC,MAVf,SAAuBH,GACnB,OACI,yBAAKC,UAAU,OAAOG,QAAS,kBAAKJ,EAAMK,WAAWL,EAAMM,MACvD,yBAAKL,UAAU,iBACX,yBAAKM,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,W,aCAlCC,MAJf,SAAeX,GACX,OAAO,wBAAIC,UAAU,SAASD,EAAME,W,MCWzBU,MAZf,SAAeZ,GACX,OACI,4BAAQC,UAAU,aACd,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBAAoB,4BAAKD,EAAMa,QAC9C,yBAAKZ,UAAU,sBAAqB,8CAAoBD,EAAMc,QAC9D,yBAAKb,UAAU,sBAAqB,2CAAiBD,EAAMe,eCD3E,SAASC,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,E,IAwFMO,E,2MAnFbC,MAAQ,CACNC,aACAZ,MAAO,EACPC,UAAW,EACXV,WAAY,I,EAGdA,WAAa,SAAAC,GACX,IAAID,EAAa,EAAKoB,MAAMpB,WAChB,EAAKoB,MAAMX,MACP,EAAKW,MAAMV,WAEK,IAA5BV,EAAWsB,QAAQrB,IACrBD,EAAWuB,KAAKtB,GAChBuB,QAAQC,IAAIzB,GACZ,EAAK0B,kBAEL,EAAKC,gBACI,EAAKP,MAAMX,MACpB,EAAKmB,SAAS,CACZnB,MAAO,EACPT,WAAY,O,EAkBlB0B,gBAAkB,WAAO,IAAD,EACK,EAAKN,MAAzBX,EADe,EACfA,MAAOC,EADQ,EACRA,UACRmB,EAAWpB,EAAQ,EACzB,EAAKmB,SAAS,CACZnB,MAAOoB,EACPnB,UAAWmB,EAAWnB,EAAYmB,EAAWnB,K,EAYjDiB,YAAc,WACZ,EAAKC,SAAS,CAAEP,WAAYV,EAAQU,M,wEAG7B,IAAD,OACN,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,2BACA,kBAAC,EAAD,CACAb,MAAM,uFACNC,MAAOqB,KAAKV,MAAMX,MAClBC,UAAWoB,KAAKV,MAAMV,YAErBoB,KAAKV,MAAMC,WAAWU,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACF/B,GAAM+B,EAAU/B,GAChBgC,IAAOD,EAAU/B,GACjBI,MAAS2B,EAAU3B,MACnBL,WAAc,EAAKA,qB,GA3ETkC,IAAMC,WCbxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a6df7ee3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n    return (\n        <div className=\"card\" onClick={()=> props.clickedImg(props.id)}>\n            <div className=\"img-container\">\n                <img alt={props.name} src={props.image} />\n            </div>\n        </div>\n    )\n}\n\nexport default CharacterCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props){\n    return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n    return (\n        <header className=\"userScore\">\n            <div className=\"row\">\n                <div className=\"col-md-6 col-left\"><h5>{props.title}</h5></div>\n                <div className=\"col-md-3 col-right\"><h6>Current Score: {props.score}</h6></div>\n                <div className=\"col-md-3 col-right\"><h6>High Score: {props.highScore}</h6></div>\n            </div>\n        </header>\n    )\n}\n\nexport default Score;","import React from 'react';\nimport Wrapper from './components/Wrapper';\nimport CharacterCard from './components/CharacterCard'\nimport characters from \"./cards.json\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\n\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n\nclass App extends React.Component{\n  state = {\n    characters,\n    score: 0,\n    highScore: 0,\n    clickedImg: []\n  };\n\n  clickedImg = id =>{\n    let clickedImg = this.state.clickedImg;\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n\n    if (clickedImg.indexOf(id) === -1) {\n      clickedImg.push(id);\n      console.log(clickedImg);\n      this.handleIncrement();\n      // this.increaseHigh();\n      this.makeShuffle();\n    } else if (this.state.score === 10) {\n      this.setState({\n        score: 0,\n        clickedImg: []\n      });\n    } else {\n      this.setState({\n        score: 0,\n        clickedImg: []\n      });\n    }\n\n    // if (score >= highScore) {\n    //   this.setState({\n    //     highScore: score\n    //   });\n    // }\n    \n\n  };\n\n  handleIncrement = () => {\n    const {score, highScore} = this.state;\n    const newScore = score + 1;\n    this.setState({\n      score: newScore,\n      highScore: newScore > highScore ? newScore : highScore\n    });\n  };\n\n  // increaseHigh = () => {\n  //   if(this.state.score >= this.state.highScore){\n  //     this.setState({\n  //       highScore: this.state.score\n  //     })\n  //   }\n  // }\n\n  makeShuffle = () => {\n    this.setState({ characters: shuffle(characters) });\n  };\n\n  render(){\n    return(\n      <Wrapper>\n        <Title>React Clicky Game!</Title>\n        <Score\n        title=\"Try to click on all the characters below without clicking on the same picture twice!\"\n        score={this.state.score}\n        highScore={this.state.highScore}\n        />\n        {this.state.characters.map(character =>(\n          <CharacterCard\n        id = {character.id}\n        key = {character.id}\n        image = {character.image}\n        clickedImg = {this.clickedImg}\n        />\n        ))}\n        \n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}